# ------------------------------------------------------------------------------------
#  Run Go Tests Workflow
#
#  Purpose   : Run all Go tests and dependency checks on every push and pull request.
#
#  Triggers  : On push or pull request to any branch.
#
#  Maintainer: @mrz1836
# ------------------------------------------------------------------------------------

name: run-go-tests

env:
  GO111MODULE: on

on:
  push:
    branches:
      - master         # Only test pushes to default branch
    tags:
      - 'v*'           # Optional: Run tests on versioned tags
  pull_request:        # Run tests on all PRs (regardless of target)
    branches:
      - '**'

# Cancel older runs of the same branch/PR if a new commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # ----------------------------------------------------------------------------------
  # Ask Nancy: Dependency Vulnerability Scanning
  #
  # This job uses the Nancy GitHub Action to scan Go module dependencies for known vulnerabilities.
  # ----------------------------------------------------------------------------------
  asknancy:
    name: Ask Nancy (check dependencies)
    runs-on: ubuntu-24.04 # Pinned to the latest LTS version (Change to `ubuntu-latest` if you want to use the latest version)
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Write go list
        run: go list -json -m all > go.list
      - name: Ask Nancy
        uses: sonatype-nexus-community/nancy-github-action@726e338312e68ecdd4b4195765f174d3b3ce1533 # v1.0.3
        continue-on-error: false # Fail the job if vulnerabilities are found
        with:
          nancyCommand: sleuth --loud --exclude-vulnerability CVE-2022-32149

  # ----------------------------------------------------------------------------------
  # GoVulnCheck: Go Vulnerability Check
  #
  # This job uses govulncheck to scan the codebase for known vulnerabilities
  # ----------------------------------------------------------------------------------
  govulncheck:
    name: Run govulncheck (Go vulnerability check)
    runs-on: ubuntu-24.04 # Pinned to the latest LTS version (Change to `ubuntu-latest` if you want to use the latest version)
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: 1.24.x
      - name: Install govulncheck
        run: make govulncheck-install
      - name: Run govulncheck
        run: make govulncheck

  # ----------------------------------------------------------------------------------
  # Go Vet: Static Analysis
  #
  # This job runs go vet to perform static analysis on the code.
  # ----------------------------------------------------------------------------------
  govet:
    name: Go vet (static analysis)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: 1.24.x
      - name: Go vet
        run: go vet -v ./...

  # ----------------------------------------------------------------------------------
  # Testmake: Verify makefile help target and makefiles compile
  #
  # This job verifies that the Makefile compiles correctly and that the help target works.
  # ----------------------------------------------------------------------------------
  testmake:
    name: Verify makefile (test compilation and help target)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: 1.24.x
      - name: Verify make help works
        run: make help

  test:
    needs: [ asknancy, govulncheck, govet, testmake ]
    strategy:
      matrix:
        go-version: [ 1.24.x ]
        os: [ ubuntu-24.04, macos-15 ] # These are pinned to the latest LTS versions (Change to `ubuntu-latest` or `macos-latest` if you want to use the latest versions)
    runs-on: ${{ matrix.os }}
    steps:
      # ————————————————————————————————————————————————————————————————
      # 1. Check out the code
      # ————————————————————————————————————————————————————————————————
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # ————————————————————————————————————————————————————————————————
      # 2. Install the requested Go version (with built‑in caching enabled)
      # ————————————————————————————————————————————————————————————————
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
          cache-dependency-path: |
            **/go.sum
            **/go.mod

      # ————————————————————————————————————————————————————————————————
      # 3. Ensure go.sum exists
      # ————————————————————————————————————————————————————————————————
      - name: Ensure go.sum exists
        run: |
          if [ ! -f go.sum ]; then
            echo "go.sum not found, running 'go mod tidy' to generate it."
            go mod tidy
          fi

      # ————————————————————————————————————————————————————————————————
      # 4. Download modules
      # ————————————————————————————————————————————————————————————————
      - name: Download modules
        run: go mod download

      # ————————————————————————————————————————————————————————————————
      # 5. Run linter and tests
      # ————————————————————————————————————————————————————————————————
      - name: Run linter and tests
        run: make test-ci

      # ————————————————————————————————————————————————————————————————
      # 6. Upload coverage to Codecov
      # ————————————————————————————————————————————————————————————————
      - name: Upload code coverage
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}   # required for private repos
          flags: unittests
          fail_ci_if_error: true
          verbose: true
