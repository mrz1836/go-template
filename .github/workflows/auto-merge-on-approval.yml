# ------------------------------------------------------------------------------
#  Auto-Enable Merge on Approval Workflow
#
#  Purpose: Automatically ENABLE auto-merge for PRs when approval and
#           readiness conditions are met, then let GitHub handle the actual merge
#
#  Triggers: Pull‑request events and review submissions
#
#  Maintainer: @mrz1836
#
#  Rules for Auto‑Merge Enablement:
#    • ≥1 approval review
#    • No requested reviewers remaining
#    • No "Changes Requested" reviews
#    • PR ready for review (not draft, no WIP indicators)
#    • NOT authored by bots (handled by separate Dependabot workflow)
#    • Uses GitHub's native auto-merge (waits for ALL status checks automatically)
# ------------------------------------------------------------------------------

name: auto-enable-merge-on-approval

# ————————————————————————————————————————————————————————————————
# Trigger Configuration
# ————————————————————————————————————————————————————————————————
on:
  pull_request_review:
    types: [submitted]
  pull_request:
    types: [ready_for_review, review_request_removed]

# ————————————————————————————————————————————————————————————————
# Permissions
# ————————————————————————————————————————————————————————————————
permissions:
  contents: read
  pull-requests: read

# ————————————————————————————————————————————————————————————————
# Concurrency Control
# ————————————————————————————————————————————————————————————————
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  auto-enable-merge:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    # Skip bot PRs - they have their own workflow
    if: github.event.pull_request.user.login != 'dependabot[bot]'

    steps:
      # ————————————————————————————————————————————————————————————————
      # 1. Get PR information and validate conditions
      # ————————————————————————————————————————————————————————————————
      - name: Check PR conditions and enable auto-merge
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;

            // Get fresh PR data
            const { data: pr } = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: prNumber,
            });

            console.log(`Checking auto-merge conditions for PR #${prNumber}: "${pr.title}"`);

            // ————————————————————————————————————————————————————————————————
            // Check basic PR conditions
            // ————————————————————————————————————————————————————————————————
            const isDraft = pr.draft;
            const title = pr.title || '';
            const labels = pr.labels.map(l => l.name);
            const titleHasWip = /\b(wip|work.in.progress)\b/i.test(title);
            const hasWipLabel = labels.includes('work-in-progress');

            if (isDraft) {
              console.log('⏭️ PR is draft - skipping auto-merge');
              return;
            }

            if (titleHasWip || hasWipLabel) {
              console.log('⏭️ PR has WIP indicators - skipping auto-merge');
              return;
            }

            // ————————————————————————————————————————————————————————————————
            // Check review conditions
            // ————————————————————————————————————————————————————————————————
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner,
              repo,
              pull_number: prNumber,
            });

            // Get latest review per user (GitHub API returns all reviews)
            const latestReviews = {};
            reviews.forEach(review => {
              const userId = review.user.id;
              if (!latestReviews[userId] || review.submitted_at > latestReviews[userId].submitted_at) {
                latestReviews[userId] = review;
              }
            });

            const currentReviews = Object.values(latestReviews);
            const approvals = currentReviews.filter(r => r.state === 'APPROVED').length;
            const changesRequested = currentReviews.filter(r => r.state === 'CHANGES_REQUESTED').length;
            const requestedReviewers = (pr.requested_reviewers || []).length;

            console.log(`Reviews: ${approvals} approvals, ${changesRequested} changes requested, ${requestedReviewers} pending`);

            // ————————————————————————————————————————————————————————————————
            // Check if auto-merge should be enabled
            // ————————————————————————————————————————————————————————————————
            const shouldEnableAutoMerge = (
              approvals >= 1 &&
              changesRequested === 0 &&
              requestedReviewers === 0
            );

            if (!shouldEnableAutoMerge) {
              if (approvals < 1) console.log('⏭️ Needs at least 1 approval');
              if (changesRequested > 0) console.log('⏭️ Has "Changes Requested" reviews');
              if (requestedReviewers > 0) console.log('⏭️ Has pending reviewer requests');
              return;
            }

            // ————————————————————————————————————————————————————————————————
            // Enable auto-merge using GitHub CLI
            // ————————————————————————————————————————————————————————————————
            try {
              // Check if auto-merge is already enabled
              if (pr.auto_merge) {
                console.log('✅ Auto-merge already enabled');
                return;
              }

              // Enable auto-merge (GitHub will wait for all required status checks)
              const { execSync } = require('child_process');
              const prUrl = pr.html_url;

              execSync(`gh pr merge --auto --squash "${prUrl}"`, {
                env: {
                  ...process.env,
                  GH_TOKEN: process.env.GITHUB_TOKEN
                },
                stdio: 'inherit'
              });

              console.log('✅ Auto-merge enabled! PR will merge when all status checks pass.');

              // Add a comment to notify
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prNumber,
                body: `🤖 **Auto-merge enabled**\n\nThis PR will automatically merge when all required status checks pass.`
              });

            } catch (error) {
              console.error('❌ Failed to enable auto-merge:', error.message);

              // Comment on failure
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prNumber,
                body: `⚠️ **Auto-merge failed**\n\nCould not enable auto-merge: ${error.message}`
              });
            }

      # ————————————————————————————————————————————————————————————————
      # 2. Disable auto-merge if conditions change
      # ————————————————————————————————————————————————————————————————
      - name: Disable auto-merge if conditions no longer met
        if: github.event.action == 'submitted' && github.event.review.state == 'CHANGES_REQUESTED'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;

            try {
              const { execSync } = require('child_process');
              const prUrl = context.payload.pull_request.html_url;

              // Disable auto-merge
              execSync(`gh pr merge --disable-auto "${prUrl}"`, {
                env: {
                  ...process.env,
                  GH_TOKEN: process.env.GITHUB_TOKEN
                },
                stdio: 'inherit'
              });

              console.log('🛑 Auto-merge disabled due to "Changes Requested" review');

              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prNumber,
                body: `🛑 **Auto-merge disabled**\n\nChanges were requested in a review. Auto-merge will be re-enabled when conditions are met again.`
              });

            } catch (error) {
              console.log('ℹ️ Could not disable auto-merge (may not have been enabled):', error.message);
            }
